// source: fds/protobuf/stach/RowOrganized.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var fds_protobuf_stach_table_MetadataItem_pb = require('../../../fds/protobuf/stach/table/MetadataItem_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_MetadataItem_pb);
var fds_protobuf_stach_table_CellDefinition_pb = require('../../../fds/protobuf/stach/table/CellDefinition_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_CellDefinition_pb);
var fds_protobuf_stach_table_ColumnDefinition_pb = require('../../../fds/protobuf/stach/table/ColumnDefinition_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_ColumnDefinition_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.Row', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.Row.KindCase', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.Table', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.TableData', null, global);
goog.exportSymbol('proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.Table, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.Table.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.Table';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.repeatedFields_, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.factset.protobuf.stach.RowOrganizedPackage.TableData.repeatedFields_, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.TableData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.TableData.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.TableData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.factset.protobuf.stach.RowOrganizedPackage.Row.oneofGroups_);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.Row.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.displayName = 'proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tablesMap: (f = msg.getTablesMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.RowOrganizedPackage.Table.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage;
  return proto.factset.protobuf.stach.RowOrganizedPackage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = msg.getTablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.RowOrganizedPackage.Table.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.RowOrganizedPackage.Table());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.RowOrganizedPackage.Table.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.Table.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.toObject = function(includeInstance, msg) {
  var f, obj = {
    definition: (f = msg.getDefinition()) && proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.toObject(includeInstance, f),
    headersDefinition: (f = msg.getHeadersDefinition()) && proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.factset.protobuf.stach.RowOrganizedPackage.TableData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.Table;
  return proto.factset.protobuf.stach.RowOrganizedPackage.Table.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition;
      reader.readMessage(value,proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.deserializeBinaryFromReader);
      msg.setDefinition(value);
      break;
    case 2:
      var value = new proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition;
      reader.readMessage(value,proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.deserializeBinaryFromReader);
      msg.setHeadersDefinition(value);
      break;
    case 3:
      var value = new proto.factset.protobuf.stach.RowOrganizedPackage.TableData;
      reader.readMessage(value,proto.factset.protobuf.stach.RowOrganizedPackage.TableData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.Table.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefinition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.serializeBinaryToWriter
    );
  }
  f = message.getHeadersDefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.factset.protobuf.stach.RowOrganizedPackage.TableData.serializeBinaryToWriter
    );
  }
};


/**
 * optional TableDefinition definition = 1;
 * @return {?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.getDefinition = function() {
  return /** @type{?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} */ (
    jspb.Message.getWrapperField(this, proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition, 1));
};


/**
 * @param {?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.setDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.clearDefinition = function() {
  return this.setDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.hasDefinition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TableDefinition headers_definition = 2;
 * @return {?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.getHeadersDefinition = function() {
  return /** @type{?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} */ (
    jspb.Message.getWrapperField(this, proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition, 2));
};


/**
 * @param {?proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.setHeadersDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.clearHeadersDefinition = function() {
  return this.setHeadersDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.hasHeadersDefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TableData data = 3;
 * @return {?proto.factset.protobuf.stach.RowOrganizedPackage.TableData}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.getData = function() {
  return /** @type{?proto.factset.protobuf.stach.RowOrganizedPackage.TableData} */ (
    jspb.Message.getWrapperField(this, proto.factset.protobuf.stach.RowOrganizedPackage.TableData, 3));
};


/**
 * @param {?proto.factset.protobuf.stach.RowOrganizedPackage.TableData|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Table} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Table.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    fds_protobuf_stach_table_ColumnDefinition_pb.ColumnDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition;
  return proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new fds_protobuf_stach_table_ColumnDefinition_pb.ColumnDefinition;
      reader.readMessage(value,fds_protobuf_stach_table_ColumnDefinition_pb.ColumnDefinition.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      fds_protobuf_stach_table_ColumnDefinition_pb.ColumnDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated table.ColumnDefinition columns = 1;
 * @return {!Array<!proto.factset.protobuf.stach.table.ColumnDefinition>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.factset.protobuf.stach.table.ColumnDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, fds_protobuf_stach_table_ColumnDefinition_pb.ColumnDefinition, 1));
};


/**
 * @param {!Array<!proto.factset.protobuf.stach.table.ColumnDefinition>} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.factset.protobuf.stach.table.ColumnDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.factset.protobuf.stach.table.ColumnDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.factset.protobuf.stach.table.ColumnDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableDefinition.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.TableData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.factset.protobuf.stach.RowOrganizedPackage.Row.toObject, includeInstance),
    tableMetadataMap: (f = msg.getTableMetadataMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.MetadataItem.toObject) : [],
    columnMetadataMap: (f = msg.getColumnMetadataMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.TableData;
  return proto.factset.protobuf.stach.RowOrganizedPackage.TableData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.factset.protobuf.stach.RowOrganizedPackage.Row;
      reader.readMessage(value,proto.factset.protobuf.stach.RowOrganizedPackage.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = msg.getTableMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.MetadataItem.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.MetadataItem());
         });
      break;
    case 3:
      var value = msg.getColumnMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.TableData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.factset.protobuf.stach.RowOrganizedPackage.Row.serializeBinaryToWriter
    );
  }
  f = message.getTableMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.MetadataItem.serializeBinaryToWriter);
  }
  f = message.getColumnMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.serializeBinaryToWriter);
  }
};


/**
 * repeated Row rows = 1;
 * @return {!Array<!proto.factset.protobuf.stach.RowOrganizedPackage.Row>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.factset.protobuf.stach.RowOrganizedPackage.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.factset.protobuf.stach.RowOrganizedPackage.Row, 1));
};


/**
 * @param {!Array<!proto.factset.protobuf.stach.RowOrganizedPackage.Row>} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.factset.protobuf.stach.RowOrganizedPackage.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * map<string, table.MetadataItem> table_metadata = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.getTableMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.MetadataItem));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.clearTableMetadataMap = function() {
  this.getTableMetadataMap().clear();
  return this;};


/**
 * map<string, MapOfMetadata> column_metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.getColumnMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.TableData} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.TableData.prototype.clearColumnMetadataMap = function() {
  this.getColumnMetadataMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.KindCase = {
  KIND_NOT_SET: 0,
  CELLS: 3,
  VALUES: 4
};

/**
 * @return {proto.factset.protobuf.stach.RowOrganizedPackage.Row.KindCase}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getKindCase = function() {
  return /** @type {proto.factset.protobuf.stach.RowOrganizedPackage.Row.KindCase} */(jspb.Message.computeOneofCase(this, proto.factset.protobuf.stach.RowOrganizedPackage.Row.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rowType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cells: (f = msg.getCells()) && google_protobuf_struct_pb.ListValue.toObject(includeInstance, f),
    values: (f = msg.getValues()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    cellDetailsMap: (f = msg.getCellDetailsMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.toObject) : [],
    headerCellDetailsMap: (f = msg.getHeaderCellDetailsMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.toObject) : [],
    rowMetadataMap: (f = msg.getRowMetadataMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.MetadataItem.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.Row;
  return proto.factset.protobuf.stach.RowOrganizedPackage.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType} */ (reader.readEnum());
      msg.setRowType(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.ListValue;
      reader.readMessage(value,google_protobuf_struct_pb.ListValue.deserializeBinaryFromReader);
      msg.setCells(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 5:
      var value = msg.getCellDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail());
         });
      break;
    case 6:
      var value = msg.getHeaderCellDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail());
         });
      break;
    case 7:
      var value = msg.getRowMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.MetadataItem.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.MetadataItem());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRowType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCells();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.ListValue.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getCellDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.serializeBinaryToWriter);
  }
  f = message.getHeaderCellDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.serializeBinaryToWriter);
  }
  f = message.getRowMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.MetadataItem.serializeBinaryToWriter);
  }
};


/**
 * @enum {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType = {
  BODY: 0,
  HEADER: 1
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RowType row_type = 2;
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getRowType = function() {
  return /** @type {!proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.Row.RowType} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.setRowType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.ListValue cells = 3;
 * @return {?proto.google.protobuf.ListValue}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getCells = function() {
  return /** @type{?proto.google.protobuf.ListValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.ListValue, 3));
};


/**
 * @param {?proto.google.protobuf.ListValue|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.setCells = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.factset.protobuf.stach.RowOrganizedPackage.Row.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.clearCells = function() {
  return this.setCells(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.hasCells = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Struct values = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getValues = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.setValues = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.factset.protobuf.stach.RowOrganizedPackage.Row.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.hasValues = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, CellDetail> cell_details = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getCellDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.clearCellDetailsMap = function() {
  this.getCellDetailsMap().clear();
  return this;};


/**
 * map<string, HeaderCellDetail> header_cell_details = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getHeaderCellDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.clearHeaderCellDetailsMap = function() {
  this.getHeaderCellDetailsMap().clear();
  return this;};


/**
 * map<string, table.MetadataItem> row_metadata = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.getRowMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.MetadataItem));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.Row} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.Row.prototype.clearRowMetadataMap = function() {
  this.getRowMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cellDefinition: (f = msg.getCellDefinition()) && fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.toObject(includeInstance, f),
    cellMetadataMap: (f = msg.getCellMetadataMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.MetadataItem.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail;
  return proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupLevel(value);
      break;
    case 2:
      var value = new fds_protobuf_stach_table_CellDefinition_pb.CellDefinition;
      reader.readMessage(value,fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.deserializeBinaryFromReader);
      msg.setCellDefinition(value);
      break;
    case 3:
      var value = msg.getCellMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.MetadataItem.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.MetadataItem());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupLevel();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCellDefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.serializeBinaryToWriter
    );
  }
  f = message.getCellMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.MetadataItem.serializeBinaryToWriter);
  }
};


/**
 * optional int32 group_level = 1;
 * @return {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.getGroupLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.setGroupLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional table.CellDefinition cell_definition = 2;
 * @return {?proto.factset.protobuf.stach.table.CellDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.getCellDefinition = function() {
  return /** @type{?proto.factset.protobuf.stach.table.CellDefinition} */ (
    jspb.Message.getWrapperField(this, fds_protobuf_stach_table_CellDefinition_pb.CellDefinition, 2));
};


/**
 * @param {?proto.factset.protobuf.stach.table.CellDefinition|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.setCellDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.clearCellDefinition = function() {
  return this.setCellDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.hasCellDefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, table.MetadataItem> cell_metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.getCellMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.MetadataItem));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.CellDetail.prototype.clearCellMetadataMap = function() {
  this.getCellMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    colspan: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rowspan: jspb.Message.getFieldWithDefault(msg, 2, 0),
    source: jspb.Message.getFieldWithDefault(msg, 3, 0),
    columnIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cellDefinition: (f = msg.getCellDefinition()) && fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.toObject(includeInstance, f),
    cellMetadataMap: (f = msg.getCellMetadataMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.MetadataItem.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail;
  return proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColspan(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowspan(value);
      break;
    case 3:
      var value = /** @type {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource} */ (reader.readEnum());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColumnIndex(value);
      break;
    case 5:
      var value = new fds_protobuf_stach_table_CellDefinition_pb.CellDefinition;
      reader.readMessage(value,fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.deserializeBinaryFromReader);
      msg.setCellDefinition(value);
      break;
    case 6:
      var value = msg.getCellMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.MetadataItem.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.MetadataItem());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColspan();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRowspan();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getColumnIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCellDefinition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.serializeBinaryToWriter
    );
  }
  f = message.getCellMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.MetadataItem.serializeBinaryToWriter);
  }
};


/**
 * @enum {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource = {
  UNKNOWN: 0,
  NONE: 1,
  PRIMARY: 2,
  HEADERS: 3
};

/**
 * optional int32 colspan = 1;
 * @return {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getColspan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.setColspan = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rowspan = 2;
 * @return {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getRowspan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.setRowspan = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional TableSource source = 3;
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getSource = function() {
  return /** @type {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.TableSource} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 column_index = 4;
 * @return {number}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getColumnIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.setColumnIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional table.CellDefinition cell_definition = 5;
 * @return {?proto.factset.protobuf.stach.table.CellDefinition}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getCellDefinition = function() {
  return /** @type{?proto.factset.protobuf.stach.table.CellDefinition} */ (
    jspb.Message.getWrapperField(this, fds_protobuf_stach_table_CellDefinition_pb.CellDefinition, 5));
};


/**
 * @param {?proto.factset.protobuf.stach.table.CellDefinition|undefined} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
*/
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.setCellDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.clearCellDefinition = function() {
  return this.setCellDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.hasCellDefinition = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, table.MetadataItem> cell_metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.getCellMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.MetadataItem));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.HeaderCellDetail.prototype.clearCellMetadataMap = function() {
  this.getCellMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.MetadataItem.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata;
  return proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getItemsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.MetadataItem.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.MetadataItem());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.MetadataItem.serializeBinaryToWriter);
  }
};


/**
 * map<string, table.MetadataItem> items = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.prototype.getItemsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.MetadataItem>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.MetadataItem));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.MapOfMetadata.prototype.clearItemsMap = function() {
  this.getItemsMap().clear();
  return this;};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, Table> tables = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.Table>}
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.getTablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.RowOrganizedPackage.Table>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.factset.protobuf.stach.RowOrganizedPackage.Table));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.RowOrganizedPackage} returns this
 */
proto.factset.protobuf.stach.RowOrganizedPackage.prototype.clearTablesMap = function() {
  this.getTablesMap().clear();
  return this;};


goog.object.extend(exports, proto.factset.protobuf.stach);
