// source: fds/protobuf/stach/table/ColumnData.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var fds_protobuf_stach_table_CellDefinition_pb = require('../../../../fds/protobuf/stach/table/CellDefinition_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_CellDefinition_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.factset.protobuf.stach.table.ColumnData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.table.ColumnData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.factset.protobuf.stach.table.ColumnData.repeatedFields_, null);
};
goog.inherits(proto.factset.protobuf.stach.table.ColumnData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.table.ColumnData.displayName = 'proto.factset.protobuf.stach.table.ColumnData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.factset.protobuf.stach.table.ColumnData.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.table.ColumnData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.table.ColumnData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.table.ColumnData.toObject = function(includeInstance, msg) {
  var f, obj = {
    rangesMap: (f = msg.getRangesMap()) ? f.toObject(includeInstance, undefined) : [],
    values: (f = msg.getValues()) && google_protobuf_struct_pb.ListValue.toObject(includeInstance, f),
    definitionsList: jspb.Message.toObjectList(msg.getDefinitionsList(),
    fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.table.ColumnData}
 */
proto.factset.protobuf.stach.table.ColumnData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.table.ColumnData;
  return proto.factset.protobuf.stach.table.ColumnData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.table.ColumnData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.table.ColumnData}
 */
proto.factset.protobuf.stach.table.ColumnData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRangesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 2:
      var value = new google_protobuf_struct_pb.ListValue;
      reader.readMessage(value,google_protobuf_struct_pb.ListValue.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 3:
      var value = new fds_protobuf_stach_table_CellDefinition_pb.CellDefinition;
      reader.readMessage(value,fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.deserializeBinaryFromReader);
      msg.addDefinitions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.table.ColumnData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.table.ColumnData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.table.ColumnData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRangesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.ListValue.serializeBinaryToWriter
    );
  }
  f = message.getDefinitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      fds_protobuf_stach_table_CellDefinition_pb.CellDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, int32> ranges = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.getRangesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.table.ColumnData} returns this
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.clearRangesMap = function() {
  this.getRangesMap().clear();
  return this;};


/**
 * optional google.protobuf.ListValue values = 2;
 * @return {?proto.google.protobuf.ListValue}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.getValues = function() {
  return /** @type{?proto.google.protobuf.ListValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.ListValue, 2));
};


/**
 * @param {?proto.google.protobuf.ListValue|undefined} value
 * @return {!proto.factset.protobuf.stach.table.ColumnData} returns this
*/
proto.factset.protobuf.stach.table.ColumnData.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.table.ColumnData} returns this
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.hasValues = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated CellDefinition definitions = 3;
 * @return {!Array<!proto.factset.protobuf.stach.table.CellDefinition>}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.getDefinitionsList = function() {
  return /** @type{!Array<!proto.factset.protobuf.stach.table.CellDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, fds_protobuf_stach_table_CellDefinition_pb.CellDefinition, 3));
};


/**
 * @param {!Array<!proto.factset.protobuf.stach.table.CellDefinition>} value
 * @return {!proto.factset.protobuf.stach.table.ColumnData} returns this
*/
proto.factset.protobuf.stach.table.ColumnData.prototype.setDefinitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.factset.protobuf.stach.table.CellDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.factset.protobuf.stach.table.CellDefinition}
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.addDefinitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.factset.protobuf.stach.table.CellDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.factset.protobuf.stach.table.ColumnData} returns this
 */
proto.factset.protobuf.stach.table.ColumnData.prototype.clearDefinitionsList = function() {
  return this.setDefinitionsList([]);
};


goog.object.extend(exports, proto.factset.protobuf.stach.table);
