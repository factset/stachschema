// source: fds/protobuf/stach/table/TableData.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var fds_protobuf_stach_table_ColumnData_pb = require('../../../../fds/protobuf/stach/table/ColumnData_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_ColumnData_pb);
var fds_protobuf_stach_table_MetadataCollection_pb = require('../../../../fds/protobuf/stach/table/MetadataCollection_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_MetadataCollection_pb);
var fds_protobuf_stach_table_RowDefinition_pb = require('../../../../fds/protobuf/stach/table/RowDefinition_pb.js');
goog.object.extend(proto, fds_protobuf_stach_table_RowDefinition_pb);
goog.exportSymbol('proto.factset.protobuf.stach.table.TableData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.factset.protobuf.stach.table.TableData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.factset.protobuf.stach.table.TableData.repeatedFields_, null);
};
goog.inherits(proto.factset.protobuf.stach.table.TableData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.factset.protobuf.stach.table.TableData.displayName = 'proto.factset.protobuf.stach.table.TableData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.factset.protobuf.stach.table.TableData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.factset.protobuf.stach.table.TableData.prototype.toObject = function(opt_includeInstance) {
  return proto.factset.protobuf.stach.table.TableData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.factset.protobuf.stach.table.TableData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.table.TableData.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    fds_protobuf_stach_table_RowDefinition_pb.RowDefinition.toObject, includeInstance),
    columnsMap: (f = msg.getColumnsMap()) ? f.toObject(includeInstance, proto.factset.protobuf.stach.table.ColumnData.toObject) : [],
    metadata: (f = msg.getMetadata()) && fds_protobuf_stach_table_MetadataCollection_pb.MetadataCollection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.factset.protobuf.stach.table.TableData}
 */
proto.factset.protobuf.stach.table.TableData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.factset.protobuf.stach.table.TableData;
  return proto.factset.protobuf.stach.table.TableData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.factset.protobuf.stach.table.TableData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.factset.protobuf.stach.table.TableData}
 */
proto.factset.protobuf.stach.table.TableData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new fds_protobuf_stach_table_RowDefinition_pb.RowDefinition;
      reader.readMessage(value,fds_protobuf_stach_table_RowDefinition_pb.RowDefinition.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = msg.getColumnsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.factset.protobuf.stach.table.ColumnData.deserializeBinaryFromReader, "", new proto.factset.protobuf.stach.table.ColumnData());
         });
      break;
    case 3:
      var value = new fds_protobuf_stach_table_MetadataCollection_pb.MetadataCollection;
      reader.readMessage(value,fds_protobuf_stach_table_MetadataCollection_pb.MetadataCollection.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.factset.protobuf.stach.table.TableData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.factset.protobuf.stach.table.TableData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.factset.protobuf.stach.table.TableData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.factset.protobuf.stach.table.TableData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      fds_protobuf_stach_table_RowDefinition_pb.RowDefinition.serializeBinaryToWriter
    );
  }
  f = message.getColumnsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.factset.protobuf.stach.table.ColumnData.serializeBinaryToWriter);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      fds_protobuf_stach_table_MetadataCollection_pb.MetadataCollection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RowDefinition rows = 1;
 * @return {!Array<!proto.factset.protobuf.stach.table.RowDefinition>}
 */
proto.factset.protobuf.stach.table.TableData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.factset.protobuf.stach.table.RowDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, fds_protobuf_stach_table_RowDefinition_pb.RowDefinition, 1));
};


/**
 * @param {!Array<!proto.factset.protobuf.stach.table.RowDefinition>} value
 * @return {!proto.factset.protobuf.stach.table.TableData} returns this
*/
proto.factset.protobuf.stach.table.TableData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.factset.protobuf.stach.table.RowDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.factset.protobuf.stach.table.RowDefinition}
 */
proto.factset.protobuf.stach.table.TableData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.factset.protobuf.stach.table.RowDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.factset.protobuf.stach.table.TableData} returns this
 */
proto.factset.protobuf.stach.table.TableData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * map<string, ColumnData> columns = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.factset.protobuf.stach.table.ColumnData>}
 */
proto.factset.protobuf.stach.table.TableData.prototype.getColumnsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.factset.protobuf.stach.table.ColumnData>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.factset.protobuf.stach.table.ColumnData));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.factset.protobuf.stach.table.TableData} returns this
 */
proto.factset.protobuf.stach.table.TableData.prototype.clearColumnsMap = function() {
  this.getColumnsMap().clear();
  return this;};


/**
 * optional MetadataCollection metadata = 3;
 * @return {?proto.factset.protobuf.stach.table.MetadataCollection}
 */
proto.factset.protobuf.stach.table.TableData.prototype.getMetadata = function() {
  return /** @type{?proto.factset.protobuf.stach.table.MetadataCollection} */ (
    jspb.Message.getWrapperField(this, fds_protobuf_stach_table_MetadataCollection_pb.MetadataCollection, 3));
};


/**
 * @param {?proto.factset.protobuf.stach.table.MetadataCollection|undefined} value
 * @return {!proto.factset.protobuf.stach.table.TableData} returns this
*/
proto.factset.protobuf.stach.table.TableData.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.factset.protobuf.stach.table.TableData} returns this
 */
proto.factset.protobuf.stach.table.TableData.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.factset.protobuf.stach.table.TableData.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.factset.protobuf.stach.table);
