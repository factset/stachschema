// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fds/protobuf/stach/table/ColumnDefinition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FactSet.Protobuf.Stach.Table {

  /// <summary>Holder for reflection information generated from fds/protobuf/stach/table/ColumnDefinition.proto</summary>
  public static partial class ColumnDefinitionReflection {

    #region Descriptor
    /// <summary>File descriptor for fds/protobuf/stach/table/ColumnDefinition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ColumnDefinitionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9mZHMvcHJvdG9idWYvc3RhY2gvdGFibGUvQ29sdW1uRGVmaW5pdGlvbi5w",
            "cm90bxIcZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZRopZmRzL3Byb3Rv",
            "YnVmL3N0YWNoL3RhYmxlL0RhdGFGb3JtYXQucHJvdG8i8QEKEENvbHVtbkRl",
            "ZmluaXRpb24SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRITCgtkZXNjcmlw",
            "dGlvbhgDIAEoCRIMCgR0eXBlGAQgASgJEhQKDGlzX2RpbWVuc2lvbhgFIAEo",
            "CBIRCglpc19oaWRkZW4YBiABKAgSFwoPbmV4dF9zaWJsaW5nX2lkGAcgASgJ",
            "EhEKCXBhcmVudF9pZBgIIAEoCRIRCgloZWFkZXJfaWQYCSABKAkSOAoGZm9y",
            "bWF0GAogASgLMiguZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZS5EYXRh",
            "Rm9ybWF0QpcBCiBjb20uZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZUIV",
            "Q29sdW1uRGVmaW5pdGlvblByb3RvWj1naXRodWIuY29tL2ZhY3RzZXQvc3Rh",
            "Y2hzY2hlbWEvZ28vdjIvZmRzL3Byb3RvYnVmL3N0YWNoL3RhYmxlqgIcRmFj",
            "dFNldC5Qcm90b2J1Zi5TdGFjaC5UYWJsZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::FactSet.Protobuf.Stach.Table.DataFormatReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FactSet.Protobuf.Stach.Table.ColumnDefinition), global::FactSet.Protobuf.Stach.Table.ColumnDefinition.Parser, new[]{ "Id", "Name", "Description", "Type", "IsDimension", "IsHidden", "NextSiblingId", "ParentId", "HeaderId", "Format" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A definition of a column
  /// </summary>
  public sealed partial class ColumnDefinition : pb::IMessage<ColumnDefinition> {
    private static readonly pb::MessageParser<ColumnDefinition> _parser = new pb::MessageParser<ColumnDefinition>(() => new ColumnDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FactSet.Protobuf.Stach.Table.ColumnDefinitionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnDefinition(ColumnDefinition other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      type_ = other.type_;
      isDimension_ = other.isDimension_;
      isHidden_ = other.isHidden_;
      nextSiblingId_ = other.nextSiblingId_;
      parentId_ = other.parentId_;
      headerId_ = other.headerId_;
      format_ = other.format_ != null ? other.format_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnDefinition Clone() {
      return new ColumnDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The id; used for referring to a column internal to a package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The name; used for referring to a column external to a package
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// The description; used for rendering human readable headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    /// <summary>
    /// The data type; correlates with the chosen property for `ColumnData.data`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_dimension" field.</summary>
    public const int IsDimensionFieldNumber = 5;
    private bool isDimension_;
    /// <summary>
    /// Whether this column is a dimension or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDimension {
      get { return isDimension_; }
      set {
        isDimension_ = value;
      }
    }

    /// <summary>Field number for the "is_hidden" field.</summary>
    public const int IsHiddenFieldNumber = 6;
    private bool isHidden_;
    /// <summary>
    /// Whether this column is hidden or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHidden {
      get { return isHidden_; }
      set {
        isHidden_ = value;
      }
    }

    /// <summary>Field number for the "next_sibling_id" field.</summary>
    public const int NextSiblingIdFieldNumber = 7;
    private string nextSiblingId_ = "";
    /// <summary>
    /// The next sibling column in the collapsed column tree
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextSiblingId {
      get { return nextSiblingId_; }
      set {
        nextSiblingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_id" field.</summary>
    public const int ParentIdFieldNumber = 8;
    private string parentId_ = "";
    /// <summary>
    /// The parent column in the collapsed column tree
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentId {
      get { return parentId_; }
      set {
        parentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "header_id" field.</summary>
    public const int HeaderIdFieldNumber = 9;
    private string headerId_ = "";
    /// <summary>
    /// The header id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeaderId {
      get { return headerId_; }
      set {
        headerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 10;
    private global::FactSet.Protobuf.Stach.Table.DataFormat format_;
    /// <summary>
    /// The data format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.DataFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Type != other.Type) return false;
      if (IsDimension != other.IsDimension) return false;
      if (IsHidden != other.IsHidden) return false;
      if (NextSiblingId != other.NextSiblingId) return false;
      if (ParentId != other.ParentId) return false;
      if (HeaderId != other.HeaderId) return false;
      if (!object.Equals(Format, other.Format)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (IsDimension != false) hash ^= IsDimension.GetHashCode();
      if (IsHidden != false) hash ^= IsHidden.GetHashCode();
      if (NextSiblingId.Length != 0) hash ^= NextSiblingId.GetHashCode();
      if (ParentId.Length != 0) hash ^= ParentId.GetHashCode();
      if (HeaderId.Length != 0) hash ^= HeaderId.GetHashCode();
      if (format_ != null) hash ^= Format.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (IsDimension != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDimension);
      }
      if (IsHidden != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsHidden);
      }
      if (NextSiblingId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NextSiblingId);
      }
      if (ParentId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ParentId);
      }
      if (HeaderId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HeaderId);
      }
      if (format_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (IsDimension != false) {
        size += 1 + 1;
      }
      if (IsHidden != false) {
        size += 1 + 1;
      }
      if (NextSiblingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextSiblingId);
      }
      if (ParentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentId);
      }
      if (HeaderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderId);
      }
      if (format_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Format);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.IsDimension != false) {
        IsDimension = other.IsDimension;
      }
      if (other.IsHidden != false) {
        IsHidden = other.IsHidden;
      }
      if (other.NextSiblingId.Length != 0) {
        NextSiblingId = other.NextSiblingId;
      }
      if (other.ParentId.Length != 0) {
        ParentId = other.ParentId;
      }
      if (other.HeaderId.Length != 0) {
        HeaderId = other.HeaderId;
      }
      if (other.format_ != null) {
        if (format_ == null) {
          Format = new global::FactSet.Protobuf.Stach.Table.DataFormat();
        }
        Format.MergeFrom(other.Format);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            IsDimension = input.ReadBool();
            break;
          }
          case 48: {
            IsHidden = input.ReadBool();
            break;
          }
          case 58: {
            NextSiblingId = input.ReadString();
            break;
          }
          case 66: {
            ParentId = input.ReadString();
            break;
          }
          case 74: {
            HeaderId = input.ReadString();
            break;
          }
          case 82: {
            if (format_ == null) {
              Format = new global::FactSet.Protobuf.Stach.Table.DataFormat();
            }
            input.ReadMessage(Format);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
