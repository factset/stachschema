// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fds/protobuf/stach/Package.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FactSet.Protobuf.Stach {

  /// <summary>Holder for reflection information generated from fds/protobuf/stach/Package.proto</summary>
  public static partial class PackageReflection {

    #region Descriptor
    /// <summary>File descriptor for fds/protobuf/stach/Package.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PackageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBmZHMvcHJvdG9idWYvc3RhY2gvUGFja2FnZS5wcm90bxIWZmFjdHNldC5w",
            "cm90b2J1Zi5zdGFjaBokZmRzL3Byb3RvYnVmL3N0YWNoL3RhYmxlL1RhYmxl",
            "LnByb3RvIsYBCgdQYWNrYWdlEg8KB3ZlcnNpb24YASABKAkSGQoRcHJpbWFy",
            "eV90YWJsZV9pZHMYAiADKAkSOwoGdGFibGVzGAMgAygLMisuZmFjdHNldC5w",
            "cm90b2J1Zi5zdGFjaC5QYWNrYWdlLlRhYmxlc0VudHJ5GlIKC1RhYmxlc0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLmZhY3RzZXQucHJv",
            "dG9idWYuc3RhY2gudGFibGUuVGFibGU6AjgBQnwKGmNvbS5mYWN0c2V0LnBy",
            "b3RvYnVmLnN0YWNoQgxQYWNrYWdlUHJvdG9aN2dpdGh1Yi5jb20vZmFjdHNl",
            "dC9zdGFjaHNjaGVtYS9nby92Mi9mZHMvcHJvdG9idWYvc3RhY2iqAhZGYWN0",
            "U2V0LlByb3RvYnVmLlN0YWNoYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::FactSet.Protobuf.Stach.Table.TableReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FactSet.Protobuf.Stach.Package), global::FactSet.Protobuf.Stach.Package.Parser, new[]{ "Version", "PrimaryTableIds", "Tables" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A column organized package of tables
  /// </summary>
  public sealed partial class Package : pb::IMessage<Package> {
    private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Package> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FactSet.Protobuf.Stach.PackageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package(Package other) : this() {
      version_ = other.version_;
      primaryTableIds_ = other.primaryTableIds_.Clone();
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package Clone() {
      return new Package(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    /// <summary>
    /// The version of the STACH schema. Formatted {major}.{minor}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_table_ids" field.</summary>
    public const int PrimaryTableIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_primaryTableIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> primaryTableIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The array of primary table ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PrimaryTableIds {
      get { return primaryTableIds_; }
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::FactSet.Protobuf.Stach.Table.Table>.Codec _map_tables_codec
        = new pbc::MapField<string, global::FactSet.Protobuf.Stach.Table.Table>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::FactSet.Protobuf.Stach.Table.Table.Parser), 26);
    private readonly pbc::MapField<string, global::FactSet.Protobuf.Stach.Table.Table> tables_ = new pbc::MapField<string, global::FactSet.Protobuf.Stach.Table.Table>();
    /// <summary>
    /// The map (key: table id) of all tables
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::FactSet.Protobuf.Stach.Table.Table> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Package);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Package other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!primaryTableIds_.Equals(other.primaryTableIds_)) return false;
      if (!Tables.Equals(other.Tables)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= primaryTableIds_.GetHashCode();
      hash ^= Tables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      primaryTableIds_.WriteTo(output, _repeated_primaryTableIds_codec);
      tables_.WriteTo(output, _map_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += primaryTableIds_.CalculateSize(_repeated_primaryTableIds_codec);
      size += tables_.CalculateSize(_map_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Package other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      primaryTableIds_.Add(other.primaryTableIds_);
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            primaryTableIds_.AddEntriesFrom(input, _repeated_primaryTableIds_codec);
            break;
          }
          case 26: {
            tables_.AddEntriesFrom(input, _map_tables_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
